The assumption is that the layout of the Venue is fixed, so the level information has been taken to be constant and is present in Constant files-MIN_LEVEL=1 and MAX_LEVEL=4
(Ideally these two values can be maintained as a System Parameter in the Master Data Table in the Database)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Some other ways by which this functionality can be achieved:
1. Expose each of these services as a REST API using Spring and return a json response from the API
2. Manage the database connections using connection pools
3. Integrate the database layer in spring using Hibernate Template
4. The design can further be elaborated to store the confirmation number and the reserved seats specific to each customer, also including the total price for the tickets
(Currently this has not been implemented in this assignment)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5. The scope of this application is to provide the functionality of the three methods in 
the Ticket Service interface
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6. The seatsLeft attribute in the current status table, can be populated from the master table-venue. This has not been implemented in this application. This way the initial data 
which is loaded in currentStatus table will be dynamic as per the venue seats and rows
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7. Log4j has been integrated to display the loggers
The primary data source to maintain the status of the seats is MYSQL Database. The scripts related to the tables and the database information has been documented in the 
mysql.scripts file
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8.The connection details along with the credentials for this test database is present in WalmartConstants.java
9. Hold Seats-if both the levels are absent while invoking the method- then the search is made from the best level possible i.e. level 4 and then gradually moved to lower levels
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Hold seats-if both the levels are present while invoking the method-then the search is made for the seats between the lower and the higher levels. If no seats are found then
the SeatHold object is returned with the appropriate message
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Hold Seats-if lower level is present and higher level is absent while invoking the method-the search is made from that level and gradually move to the higher levels. All possible
seats present in the desired level are held for that customer. 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Hold Seats-if higher level is present and lower level is absent while invoking the method-the search is started from the higher level and gradually moved to the lower levels.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------ 
All possible seats present in the levels are held for that customer. If the entire need is not met, then that count is also sent back to the customer, so that he can try to hold the 
tickets after some time. 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10. Clear Hold information-All the held seats will be released after a time period of 10 minutes. Once the seats are held, the customer should reserve the seats to confirm. If not 
the records will be deleted from the holdInformation table and the seats will be returned to the current pool of available seats  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11 Junit Test Cases have been written for the three methods of the Ticket Service Interface.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12. Email Validator has been used to validate a customer email
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13. The columns seatsLeft, seatHeld and seatsReserved reflect the current status of the seats at any given point of time
------------------------------------------------------------------------------------------------------------------------------------------------------------------------